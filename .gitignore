# Rust
# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock (uncomment if this is a library)

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Configuration files with secrets
config/local.json
config/production.json
config/secrets.json
*.secret

# GraphQL
# Generated schema files (if auto-generated)
schema.graphql
introspection.json

# NATS
# NATS data files (if running locally)
nats-data/
jetstream/

# Database
*.db
*.sqlite
*.sqlite3
db.sql

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# IDE and Editor files
# VSCode
.vscode/
*.code-workspace

# IntelliJ IDEA / CLion / RustRover
.idea/
*.iml
*.ipr
*.iws
.idea_modules/

# Vim
*.swp
*.swo
*~
.vim/

# Emacs
*~
\#*\#
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# Eclipse
.project
.metadata
.settings/

# Rust-specific IDE files
rust-project.json

# OS generated files
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Icon?

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Benchmarking
criterion/

# Documentation
docs/target/
docs/book/

# Backup files
*.bak
*.orig

# Local development
local/
.local/

# Docker
Dockerfile.local
docker-compose.override.yml
.dockerignore

# Testing
test-results/
coverage/

# Flamegraph profiling
flamegraph.svg
perf.data*

# Valgrind
vgcore.*
callgrind.out.*

# Binary releases
*.tar.gz
*.zip
*.dmg
*.pkg
*.deb
*.rpm

# Local configuration override
local.toml
development.toml

# Cache directories
.cache/
.cargo-cache/

# Generated documentation
target/doc/

# RLS (Rust Language Server) files
.rls/

# rust-analyzer
.rust-analyzer/

# Clippy cache
.clippy/

# Tarpaulin code coverage
tarpaulin-report.html

# vllm_env
setup/vllm_env
